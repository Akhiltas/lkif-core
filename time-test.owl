<?xml version="1.0"?>
<rdf:RDF
    xmlns:mereo="http://www.estrellaproject.org/lkif-core/mereology.owl#"
    xmlns="http://www.estrellaproject.org/lkif-core/time-test.owl#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:timerule="http://www.estrellaproject.org/lkif-core/time-rules.owl#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:daml="http://www.daml.org/2001/03/daml+oil#"
    xmlns:time="http://www.estrellaproject.org/lkif-core/time.owl#"
  xml:base="http://www.estrellaproject.org/lkif-core/time-test.owl">
  <owl:Ontology rdf:about="">
    <owl:imports rdf:resource="http://www.estrellaproject.org/lkif-core/time-rules.owl"/>
    <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Created with TopBraid Composer</owl:versionInfo>
    <owl:imports rdf:resource="http://www.estrellaproject.org/lkif-core/time.owl"/>
  </owl:Ontology>
  <owl:Class rdf:ID="Test_6">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Can the reasonner use the rule of during in the other direction?</rdfs:comment>
    <rdfs:subClassOf>
      <owl:Class rdf:ID="Test"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:ID="Test_7">
    <rdfs:subClassOf rdf:resource="#Test"/>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Can a rule refer to itself?</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:ID="Test_8">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SELECT ?subject
WHERE { ?subject rdf:type time:Time_Period 
FILTER (str(?subject) = str(:t8--thing-expected-being-time-period)) }</rdfs:comment>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Is a thing with a Time_Period before it and a Time_Period after it inferred as being a Time_Period?  Expected result: yes (query returns: t8-thing-expected-being-time-period).  Actual result: as expected.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Test"/>
  </owl:Class>
  <owl:Class rdf:ID="Test_4">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Tests whether the transitivity is inferred correctly.  Expected result: t4--period1 time:after t4--period3 and t4--period3 time:before t4--period1.  Actual result: test succeeded</rdfs:comment>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SELECT ?subject ?object
WHERE { { ?subject time:after ?object.
			FILTER ( (str(?subject) = str(:t4--period1)) &amp;&amp; (str(?object )) = str(:t4--period3))}
	UNION
		{?subject time:before ?object.
			FILTER ( (str(?subject) = str(:t4--period3)) &amp;&amp; (str(?object) = str(:t4--period1)) )} }</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Test"/>
  </owl:Class>
  <owl:Class rdf:ID="Test_5">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Tests whether the transitivity is inferred correctly from the sub-property 'next'.  Expected result: t5--period1 time:after t5--period3 and t5--period3 time:before t5--period1.  Actual result: test succeeded</rdfs:comment>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SELECT ?subject ?object
WHERE { { ?subject time:after ?object. 
			FILTER ( (str(?subject) = str(:t5--period1)) &amp;&amp; (str(?object ) = str(:t5--period3)) )}
	UNION
		{?subject time:before ?object. 
			FILTER ( (str(?subject) = str(:t5--period3)) &amp;&amp; (str(?object) = str(:t5--period1)) )} }</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Test"/>
  </owl:Class>
  <Test_6 rdf:ID="t6_pair">
    <mereo:component>
      <time:Temporal_Occurrence rdf:ID="t6_period2">
        <rdf:type rdf:resource="#Test_6"/>
      </time:Temporal_Occurrence>
    </mereo:component>
    <mereo:component>
      <time:Temporal_Occurrence rdf:ID="t6_period3">
        <rdf:type rdf:resource="#Test_6"/>
      </time:Temporal_Occurrence>
    </mereo:component>
    <rdf:type rdf:resource="http://www.estrellaproject.org/lkif-core/time.owl#Pair_Of_Periods"/>
  </Test_6>
  <time:Temporal_Occurrence rdf:ID="t4--period2">
    <time:after>
      <time:Temporal_Occurrence rdf:ID="t4--period3">
        <rdf:type rdf:resource="#Test_4"/>
      </time:Temporal_Occurrence>
    </time:after>
    <time:immediatly_after rdf:resource="#t4--period3"/>
    <rdf:type rdf:resource="#Test_4"/>
  </time:Temporal_Occurrence>
  <time:Temporal_Occurrence rdf:ID="t3--period3"/>
  <time:Temporal_Occurrence rdf:ID="t8--period-after">
    <rdf:type rdf:resource="#Test_8"/>
  </time:Temporal_Occurrence>
  <time:Temporal_Occurrence rdf:ID="t4--period1">
    <time:after rdf:resource="#t4--period2"/>
    <time:immediatly_after rdf:resource="#t4--period2"/>
    <rdf:type rdf:resource="#Test_4"/>
  </time:Temporal_Occurrence>
  <time:Temporal_Occurrence rdf:ID="test1-c--rule-components-meet">
    <rdf:type rdf:resource="http://www.estrellaproject.org/lkif-core/mereology.owl#Composition"/>
  </time:Temporal_Occurrence>
  <time:Temporal_Occurrence rdf:ID="t5--period1">
    <time:immediatly_after>
      <time:Temporal_Occurrence rdf:ID="t5--period2">
        <time:immediatly_after>
          <time:Temporal_Occurrence rdf:ID="t5--period3">
            <rdf:type rdf:resource="#Test_5"/>
          </time:Temporal_Occurrence>
        </time:immediatly_after>
        <rdf:type rdf:resource="#Test_5"/>
      </time:Temporal_Occurrence>
    </time:immediatly_after>
    <rdf:type rdf:resource="#Test_5"/>
  </time:Temporal_Occurrence>
  <time:Temporal_Occurrence rdf:ID="t3--period1"/>
  <Test_8 rdf:ID="t8--thing-expected-being-time-period">
    <time:before>
      <time:Temporal_Occurrence rdf:ID="t8--period-before">
        <rdf:type rdf:resource="#Test_8"/>
      </time:Temporal_Occurrence>
    </time:before>
    <time:after rdf:resource="#t8--period-after"/>
  </Test_8>
  <time:Temporal_Occurrence rdf:ID="t6_period1">
    <time:after rdf:resource="#t6_period2"/>
    <time:before rdf:resource="#t6_period3"/>
    <rdf:type rdf:resource="#Test_6"/>
  </time:Temporal_Occurrence>
</rdf:RDF>

<!-- Created with TopBraid Composer -->
